@startuml
'https://plantuml.com/sequence-diagram

'!theme aws-orange
skinparam sequenceMessageAlign center
skinparam BoxPadding 10
'skinparam LifelineStrategy nosolid
'autonumber
'autoactivate on
'hide footbox

actor User as user

box "control.backing"
    participant ":SubmissionBacking" as sb << @Named >>
    participant ":ErrorPageBacking" as epb << @Named >>
end box
'box "???"
'    participant ":ResourceBundle" as rscBundle
'end box
box "control.internal"
    participant "si:SessionInformation" as si << @SessionScoped >>
    participant ":UncheckedExceptionHandler" as eh << @SessionScoped >>
end box
box "control.validation"
end box
box "business.service"
    participant "ssvc:SubmissionService" as ssvc << @ApplicationScoped >>
end box
box "global.transport"
    participant "sub:Submission" as sub << @Named >>
    participant "user:User" as usr
    participant "ErrorMessage:msg" as msg
end box
box persistence
    participant "t1:Transaction" as t1
    participant ":SubmissionRepository" as sr
    participant "cp:ConnectionPool" as cp
end box

create sb
user -> sb
note left
    ruft die
    Submission-
    Seite auf
end note
user -> sb : init()
activate sb
    sb -> si ++ : getUser()
    return User sessionUsr
    sb -> usr ** : User()
    sb -> usr ++ : setId(int sessionUsr.getId())
    return
    sb -> sub ** : Submission()
return

note right of user
    int subId wird
    gelesen von
    requestParams
    (URL-Parameter)
end note
user -> sub ++ : setId(int subId)
return


user -> sb ++ : onLoad() //[via viewAction]//
    sb -> ssvc ++ : canView(Submission sub, User usr)
    return true

    sb -> ssvc : getSubmission(Submission sub)
    activate ssvc
        ssvc -> t1 ** : Transaction()
        activate t1
            t1 -> cp : __getInstance()__
            activate cp
            return ConnectionPool cp
            t1 -> cp : getConnection()
            activate cp
            return Connection conn
        return
        ssvc -> sr : __get(Submission sub, Transaction t1)__
        activate sr
            sr -> sub : getId()
            activate sub
            return int id
            sr -> t1 ++ : getConnection()
            return
        note right of sr
        == â†¯ ==
        Timeout bei DB-Zugriff
        ====
        end note

== Anfang Fehlerbehandlung ==
        return <font color=red><b>DataSourceNotFoundException e</b></font> (unchecked)

        ssvc -> t1 ++ : abort()
            t1 -> cp ++ : releaseConnection(Connection conn)
            return
        return

    return <font color=red><b>DataSourceNotFoundException e
return <font color=red><b>DataSourceNotFoundException e

user -> eh ++ : handle()
    note right of eh
    get <font color=red><b>error</b></font> <font color=red><b>message</b></font>
    (String errMsg)
    from resource bundle
    end note

    eh -> msg ** : ErrorMessage(String errMsg, String stacktrace)

    eh -> epb **
    eh -> epb ++ : setErrorMessage(msg)
    return

    note right of eh
    redirect to
    errorPage.xhtml
    end note

return

user -> epb ++ : getErrorMessage()
return msg
user -> msg ++ : getMessage()
return "<font color=red>Error: ...</font>"

'note left
'Die Ablehnung war
'nicht erfolgreich
'end note


@enduml